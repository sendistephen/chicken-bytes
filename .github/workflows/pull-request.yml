name: Pull Request

on: [pull_request]

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🔽 Checkout repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🏗 Download deps
        uses: bahmutov/npm-install@v1

      - name: ✨ Lint
        run: yarn run lint

  type-check:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🔽 Checkout repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🏗 Download deps
        uses: bahmutov/npm-install@v1

      - name: ✨ Type check
        run: yarn run type-check --if-present

  commitlint:
    name: ✨ Commitlint
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: 🔽 Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🏗 commitlint
        uses: wagoid/commitlint-github-action@v4

  vittest:
    name: 🧪 Vitest
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
    steps:
      - name: 🔽 Checkout repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🏗 Download deps
        uses: bahmutov/npm-install@v1

      - name: ✨ Setup Database
        uses: yarn run prisma:wipe
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb

      - name: ⚡ Run Vitest
        run: yarn run test -- --coverage
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb

  playwright:
    name: Playwright
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
    steps:
      - name: 🔽 Checkout repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🏗 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🌐 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: ⚙️ Setup Database
        run: yarn run prisma:wipe
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb

      - name: ⚡ Run Playwright
        run: npx playwright test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
      - name: 📸 Playwright Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
